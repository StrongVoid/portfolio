<?php require_once 'inc/header.php';  # Рендер шапки интерфейса
include 'functions.php';              # Подключение файла функций
require_once 'auth.php'; 							# Подключаем авторизацию
$login = getUserLogin();						  # Выводим переменную $login из авторизации, для дальнейшей проверки
 ?>


 <div align='center'>
    <?php if ($login === null): #Проверяем наличие авторизации ?>
      <a href="/login.php"><h2><strong>Авторизуйтесь</strong></h2></a>
      </div>
    <?php else: #Если авторизация найдена, продолжаем рендер страницы ?>


<div style="padding-left: 10%"  align='left'>
  <p>Перед тем, как приступить к написанию микросервиса, было принято решение восстановить знания PHP при помощи прохождения курса. (Именно нативный PHP, не фреймворки на его базе, по типу Laravel/Symfony).</p>

  <p>&nbsp;</p>

  <p>По мере обучение я начал видеть возможности реализации той или иной функции/системы в моём коде, на этом этапе я решил приступить к тому, чтобы проект получил свою точку старта.</p>

  <p>&nbsp;</p>

  <p>Некоторое время спустя, у проекта появился простенький, минималистичный, но очень удобный интерфейс. (Фронтенд)<br />
  На этом этапе уже можно было приступить к работе с сценариями на PHP, чем я и занялся.<br />
  <br />
  Перед погружением в логику работы backend-а этого микросервиса, было принято решение, для начала, понять, что нам нужно и какую цель преследуем при написании той или иной строчки кода.<br />
  Чтобы не путаться в большом массиве данных, проект был разбит на 3 основные части:<br />
  1. Dadata.<br />
  2. OpenAPI - Token<br />
  3. OpenAPI - Отправка чека прихода/возврата<br />
  <br />
  На этом этапе думать было уже веселее, т.к. туман мыслей рассеялся и я строго понимал, что хочу увидеть, как это должно выглядить и что должно выдавать.</p>

  <p>К каждому этапу была сделана схема, чтобы не запутаться в логике работы ПО.</p>

  <p>Далее, уже по схеме, начался кропотливый труд над постройкой корректно работающей системы, не хватает только валидации строк/тестов.<br />
  Все используемые инструменты, в главных ролях:<br />
  <strong>
  Поиск - https://google.com<br />
  Библия - https://php.net<br />
  Документация OpenApi - https://swagger.io<br />
  Документация Dadata - https://github.com<br />
  Отладка запросов API - https://postman.com</p>
</strong>

<div align= "center">
<div><h3>Dadata</h3><br><img  src="img/schem1.png" width="50%"  alt="картинка"><br><br></div>
<div><h3>OpenAPI - token</h3><br><img  src="img/schem2.png" width="50%"  alt="картинка"><br><br></div>
<div><h3>OpenAPI - Check</h3><br><img  src="img/schem3.png" width="50%"  alt="картинка"><br><br></div>
</div>

</div>
</div>




<?php endif; # До этого момента рендерим страницу для  авторизованного пользователя?>
<?php require_once 'inc/footer.php' ?>
