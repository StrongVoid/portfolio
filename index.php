
<?php
require_once 'inc/header.php';  # Рендер шапки интерфейса
require_once 'auth.php';        # Подключение скрипта авторизации
$login = getUserLogin();        # Получаем login клиента в интерфейс
 ?>

 <div align='center'>
    <?php if ($login === null): #Проверяем наличие авторизации ?>
      <a href="/login.php"><h2><strong>Авторизуйтесь</strong></h2></a>
      </div>
    <?php else: #Если авторизация найдена, продолжаем рендер страницы ?>


   <div align='left' style="padding-left: 10%">
   <p><h1 align="center">Приступим!!</p>
   <img src="img/memes.png"><br><br></h1>

   <p>Данный проект был написан для того, чтобы <s>развлечься</s>&nbsp;Виталя мог показать уровень своих знаний в области стека веб-разработки.</p>

   <p>Ради чистоты эксперименты, было решено писать всё с нуля, не используя готовые библиотеки/классы. </p>

   <p>На весь проект было потрачено порядка 16-17 часов.</p>

   <p>* Возможны случаи отклонения некоторых моментов от ТЗ.</p>

   <p><br />
   <br />
   <em><strong>Было реализовано:</strong></em></p>

   <p><br />
   1. Фронтенд, применяя технологию шаблонов на PHP, код всей страницы занимает две строки:</p>

   <p>&lt;? php require_once &#39;inc/header.php&#39;;</p>

   <p>require_once &#39;inc/footer.php&#39; ?&gt;</p>

   <p>&nbsp;</p>

   <p>2. Интеграция с сервисом Dadata.</p>

   <p>3. Корректное получение массива данных и отображение в интерфейс.</p>

   <p>4. Система записи истории запросов к сервису Dadata.</p>

   <p>5. Очистка кода путём написания функций в отдельной исполняемом файле functions.php.</p>

   <p>6. Комментирование кода в моментах, где необходимы пояснения.</p>

   <p>7. Интеграция с сервисом Онлайн-Чеки.</p>

   <p>8. Получение токена по app_id/secret_key клиента, <strong><em>прямо из интерфейса</em></strong>.</p>

   <p>9. Система формирования запроса на фискализацию в сервис онлайн чеки на аккаунт с логином &quot;test&quot;, <strong><em>так же из интерфейса.</em></strong></p>

   <p>10. Применение технологии работы с глобальнмыи массивами в PHP.</p>

   <p>11. Работа с GET/POST/COOKIE - запросами и массивами $_GET/$_POST/$_COOKIE. А так же с библиотекой cURL и заголовками запросов</p>

   <p>12. При помощи COOKIE реализована система защиты контента от неавторизованных пользователей.</p>

   <p>13. N-ое множество разных мелочей из особенности php, например, cookie на стороне клиента не может быть array, и т.д.</p>


</div>
</div>

<?php endif; ?>
<?php require_once 'inc/footer.php' ?>
